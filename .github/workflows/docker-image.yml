name: Docker Image

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

permissions:
  contents: read
  id-token: write

jobs:
  docker_image:
    runs-on: ubuntu-24.04
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' && !contains(github.event.head_commit.message, 'Automatically generated by python-semantic-release') }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Docker Image Metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/agent-lab
          tags: type=sha,format=long

      - name: Get the version
        id: get_version
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            bsantanna/agent-lab:${{ env.VERSION }}
          outputs: type=image,name=bsantanna/agent-lab:${{ env.VERSION }},push=true,annotation-index.org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Generate SBOM
        id: generate_sbom
        run: |
          syft bsantanna/agent-lab:${{ env.VERSION }} -o cyclonedx-json > sbom.json
          echo "SBOM_PATH=sbom.json" >> $GITHUB_ENV

  generate_slsa_provenance:
    needs: docker_image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_docker-based_slsa3.yml@v1.9.0
    with:
      builder-id: https://github.com/slsa-framework/slsa-github-generator/.github/workflows/builder_docker-based_slsa3.yml
      subjects: |
        [
          {
            "name": "bsantanna/agent-lab:${{ needs.docker_image.outputs.version }}",
            "digest": {
              "sha256": "${{ needs.docker_image.outputs.digest }}"
            }
          }
        ]
      source-uri: git+https://github.com/${{ github.repository }}@refs/heads/main
      github-context: ${{ toJSON(github) }}
      github-run-id: ${{ github.run_id }}
      github-run-attempt: ${{ github.run_attempt }}

  sign_and_verify:
    needs: [docker_image, generate_slsa_provenance]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: .

      - name: Sign and verify the images with GitHub OIDC Token
        env:
          DIGEST: ${{ needs.docker_image.outputs.digest }}
          TAGS: ${{ needs.docker_image.outputs.tags }}
          COSIGN_EXPERIMENTAL: "1"
          SBOM_PATH: sbom.json
          PROVENANCE_PATH: ${{ needs.generate_slsa_provenance.outputs.provenance-path }}
        run: |
          # Initialize Sigstore TUF root
          cosign initialize

          # Build image references
          images="bsantanna/agent-lab:${{ needs.docker_image.outputs.version }}@${DIGEST}"

          # Sign the image
          cosign sign --yes ${images}

          # Attest SBOM
          cosign attest --yes --predicate ${SBOM_PATH} --type cyclonedx ${images}

          # Attest SLSA Provenance
          cosign attest --yes --predicate ${PROVENANCE_PATH} --type slsa ${images}

          # Verify signature
          cosign verify ${images} \
            --certificate-identity-regexp 'https://github.com/${{ github.repository }}/.github/workflows/docker-image.yml@refs/heads/main' \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com

          # Verify SBOM attestation
          cosign verify-attestation --type cyclonedx ${images} \
            --certificate-identity-regexp 'https://github.com/${{ github.repository }}/.github/workflows/docker-image.yml@refs/heads/main' \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com

          # Verify SLSA provenance attestation
          cosign verify-attestation --type slsa ${images} \
            --certificate-identity-regexp 'https://github.com/${{ github.repository }}/.github/workflows/docker-image.yml@refs/heads/main' \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com
