services:
  app:
    build: .
    networks:
      - agent-lab
    ports:
      - "18000:8000"
    environment:
      DOCKER: 1
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318"
      OLLAMA_ENDPOINT: ${OLLAMA_ENDPOINT}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
    depends_on:
      opensearch:
        condition: service_healthy
      otel-collector:
        condition: service_started
      postgres-setup:
        condition: service_completed_successfully

  data-prepper:
    image: opensearchproject/data-prepper:latest
    #image: opensearch-data-prepper:2.11.0-SNAPSHOT # https://github.com/opensearch-project/data-prepper/blob/main/docs/developer_guide.md#building-the-docker-image
    networks:
      - agent-lab
    ports:
      - "21890:21890"
      - "21891:21891"
      - "21892:21892"
    expose:
      - "21890"
      - "21891"
      - "21892"
    volumes:
      - ./otel/dataprepper/templates/ss4o_metrics.json:/usr/share/data-prepper/templates/ss4o_metrics.json
      - ./otel/dataprepper/templates/ss4o_logs.json:/usr/share/data-prepper/templates/ss4o_logs.json
      - ./otel/dataprepper/templates/ss4o_traces.json:/usr/share/data-prepper/templates/ss4o_traces.json
      - ./otel/dataprepper/pipelines.yml:/usr/share/data-prepper/pipelines/pipelines.yaml
      - ./otel/dataprepper/config.yml:/usr/share/data-prepper/config/data-prepper-config.yaml
    depends_on:
      - opensearch
      - opensearch-dashboards

  opensearch:
    image: opensearchproject/opensearch:latest
    networks:
      - agent-lab
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      - "cluster.name=opensearch-cluster"
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    networks:
      - agent-lab
    ports:
      - "5601:5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      opensearch:
        condition: service_healthy

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    networks:
      - agent-lab
    ports:
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"
    volumes:
      - ./otel/otel-config.yml:/etc/otelcol/config.yaml
    command: [ "--config=/etc/otelcol/config.yaml" ]
    depends_on:
      opensearch:
        condition: service_healthy
      data-prepper:
        condition: service_started

  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    networks:
      - agent-lab
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-setup:
    image: pgvector/pgvector:pg16
    networks:
      - agent-lab
    environment:
      PGPASSWORD: postgres
    command: >
      bash -c '
        echo "CREATE DATABASE agent_lab;" | psql -h postgres -U postgres
        echo "CREATE DATABASE agent_lab_checkpoints;" | psql -h postgres -U postgres
        echo "CREATE DATABASE agent_lab_vectors;" | psql -h postgres -U postgres
      '
    depends_on:
      postgres:
        condition: service_healthy

  vault:
    image: hashicorp/vault:1.18
    ports:
      - "8200:8200"
    networks:
      - agent-lab
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev-only-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -dev


networks:
  agent-lab:
    name: agent-lab
